
export default class Kick {

    constructor() {
        // Follows kick tables Tetrio uses. SRS kick + custom 180
        this.kick = {
            0: {
                1: [[-1, 0], [-1, +1], [0, -2], [-1, -2]],
                2: [[0, +1], [+1, +1], [-1, +1], [+1, 0], [-1, 0]],
                3: [[+1, 0], [+1, +1], [0, -2], [+1, -2]]
            },
            1: {
                0: [[+1, 0], [+1, -1], [0, +2], [+1, +2]],
                2: [[+1, 0], [+1, -1], [0, +2], [+1, +2]],
                3: [[+1, 0], [+1, +2], [+1, +1], [0, +2], [0, +1]]
            },
            2: {
                0: [[0, -1], [-1, -1], [+1, -1], [-1, 0], [+1, 0]],
                1: [[-1, 0], [-1, +1], [0, -2], [-1, -2]],
                3: [[+1, 0], [+1, +1], [0, -2], [+1, -2]]
            },
            3: {
                0: [[-1, 0], [-1, -1], [0, +2], [-1, +2]],
                1: [[-1, 0], [-1, +2], [-1, +1], [0, +2], [0, +1]],
                2: [[-1, 0], [-1, -1], [0, +2], [-1, +2]]
            }
        };

        // SRS+ I-kick + custom 180
        this.kickI = {
            0: {
                1: [[+1, 0], [-2, 0], [-2, -1], [+1, +2]],
                2: [[0, +1]],
                3: [[-1, 0], [+2, 0], [+2, -1], [-1, +2]]
            },
            1: {
                0: [[-1, 0], [+2, 0], [-1, -2], [+2, +1]],
                2: [[-1, 0], [+2, 0], [-1, +2], [+2, -1]],
                3: [[+1, 0]]
            },
            2: {
                0: [[0, -1]],
                1: [[-2, 0], [+1, 0], [-2, +1], [+1, -2]],
                3: [[+2, 0], [-1, 0], [+2, +1], [-1, -2]]
            },
            3: {
                0: [[+1, 0], [-2, 0], [+1, -2], [-2, +1]],
                1: [[-1, 0]],
                2: [[+1, 0], [-2, 0], [+1, +2], [-2, -1]]
            }
        };
    }

    table(type, currentRotation, newRotation) {
        if (type === "i") {
            return this.kickI[currentRotation][newRotation];
        }
        return this.kick[currentRotation][newRotation];
    }

}